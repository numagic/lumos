name: test-mex-with-octave

on:
  push:
    branches:
      - 'main'
  pull_request:
    # by default only opened, synchronize and reopened activity would trigger this event
    # see: https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#pull_request
    # and def on synchronize: https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull_request
    branches:
      - 'main'

jobs:
  generate_code:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.generate-artifact-name.outputs.artifact-name}}
    steps:
      - name: Generate artifact name
        # We want to share the generated code between jobs of the same commit, but not
        # between commits, therefore we need to generate unique keys.
        id: generate-artifact-name
        run: |
          echo "::set-output name=artifact-name::codegen-${{ github.run_id }}-${{ github.run_attempt }}"
        shell: bash
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2  
        with:
          python-version: 3.9
          auto-update-conda: true
          environment-file: environment.yml
      - name: Generate code
        shell: bash -l {0}
        run: |
          python3 -m pip install . # use python3 here as python seems to point to python2, which is different to linux
          python3 tests/test_mex/export_model.py 
      - name: Store generated code and test data as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.generate-artifact-name.outputs.artifact-name }}
          path: |
            forward.c
            forward.mat

  compile_and_run_on_linux:
    runs-on: ubuntu-latest
    needs: generate_code
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt -yq update
          sudo apt install -yq --no-install-recommends octave liboctave-dev        
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.generate_code.outputs.artifact-name }}
      - run: octave tests/test_mex/compile_mex_and_run.m

  compile_and_run_on_windows:
    runs-on: windows-latest
    needs: generate_code
    steps:
      - uses: actions/checkout@v2
      - run: choco install octave.portable
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.generate_code.outputs.artifact-name }}
      - run: octave tests/test_mex/compile_mex_and_run.m
